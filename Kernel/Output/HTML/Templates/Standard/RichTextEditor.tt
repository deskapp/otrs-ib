# --
# Copyright (C) 2001-2018 OTRS AG, https://otrs.com/
# --
# This software comes with ABSOLUTELY NO WARRANTY. For details, see
# the enclosed file COPYING for license information (GPL). If you
# did not receive this file, see https://www.gnu.org/licenses/gpl-3.0.txt.
# --

<script src="[% Config("Frontend::RichTextPath") %]ckeditor.js" type="text/javascript"></script>
[% WRAPPER JSOnDocumentComplete %]
<script type="text/javascript">//<![CDATA[

    // check if height/width has already been set in the current screen
    var ScreenRichTextHeight = [% Data.RichTextHeight | JSON %],
        ScreenRichTextWidth  = [% Data.RichTextWidth | JSON %];

    if (ScreenRichTextHeight && parseInt(ScreenRichTextHeight, 10) > 0) {
        Core.Config.Set('RichText.Height', ScreenRichTextHeight);
    }
    else {
        Core.Config.Set('RichText.Height', [% Config("Frontend::RichTextHeight") | JSON %]);
    }

    if (ScreenRichTextWidth && parseInt(ScreenRichTextWidth, 10) > 0) {
        Core.Config.Set('RichText.Width', ScreenRichTextWidth);
    }
    else {
        Core.Config.Set('RichText.Width', [% Config("Frontend::RichTextWidth") | JSON %]);
    }

    Core.Config.Set('RichText.TextDir', [% Env("TextDirection") | JSON %]);
    Core.Config.Set('RichText.SpellChecker', [% Env("BrowserSpellCheckerInline") | JSON %]);
    Core.Config.Set('RichText.PreventImagePaste', [% Config("Frontend::RichText::PreventImagePaste") | JSON %]);
    Core.Config.Set('RichText.EditingAreaCSS', [% Config("Frontend::RichText::EditingAreaCSS") | JSON %] + ' body.cke_editable { ' +  [% Config("Frontend::RichText::DefaultCSS") | JSON %] + ' }');
    Core.Config.Set('RichText.Lang.SplitQuote', [% Translate('Split Quote') | JSON %]);
    Core.Config.Set('RichText.Lang.RemoveQuote', [% Translate('Remove Quote') | JSON %]);
    Core.Config.Set('RichText.Lang.OpenLink', [% Translate('Open link') | JSON %]);

    // decide if we need to use the enhanced mode (with tables)
    if ( [% Config("Frontend::RichText::EnhancedMode") | JSON %] === '1' ) {
        Core.Config.Set('RichText.Toolbar', [
            ['Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript', '-', 'NumberedList', 'BulletedList', 'Table', '-', 'Outdent', 'Indent', '-', 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock', '-', 'Link', 'Unlink', 'Undo', 'Redo', 'SelectAll' ],
            '/',
            ['Image', 'HorizontalRule', 'PasteText', 'PasteFromWord', 'SplitQuote', 'RemoveQuote', '-', '-', 'Find', 'Replace', 'SpellCheck', 'TextColor', 'BGColor', 'RemoveFormat', '-', 'ShowBlocks', 'Source', 'SpecialChar', '-', 'Maximize'],
            ['Format', 'Font', 'FontSize' ]
        ]);
        Core.Config.Set('RichText.ToolbarWithoutImage', [
            ['Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript', '-', 'NumberedList', 'BulletedList', 'Table', '-', 'Outdent', 'Indent', '-', 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock', '-', 'Link', 'Unlink', 'Undo', 'Redo', 'SelectAll' ],
            '/',
            ['HorizontalRule', 'PasteText', 'PasteFromWord', 'SplitQuote', 'RemoveQuote', '-', '-', 'Find', 'Replace', 'SpellCheck', 'TextColor', 'BGColor', 'RemoveFormat', '-', 'ShowBlocks', 'Source', 'SpecialChar', '-', 'Maximize'],
            ['Format', 'Font', 'FontSize' ]
        ]);
    }
    else {
        Core.Config.Set('RichText.Toolbar', [
            ['Bold', 'Italic', 'Underline', 'Strike', '-', 'NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock', '-', 'Link', 'Unlink', '-', 'Image', 'HorizontalRule', 'Table', '-', 'Undo', 'Redo', '-', 'Find', 'SpellCheck', 'PasteText' ],
            '/',
            ['Format', 'Font', 'FontSize', '-', 'TextColor', 'BGColor', 'RemoveFormat', '-', 'Source', 'SpecialChar', 'SplitQuote', 'RemoveQuote', '-', 'Maximize']
        ]);
        Core.Config.Set('RichText.ToolbarWithoutImage', [
            ['Bold', 'Italic', 'Underline', 'Strike', '-', 'NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock', '-', 'Link', 'Unlink', '-', 'HorizontalRule', 'Table', '-', 'Undo', 'Redo', '-', 'Find', 'SpellCheck', 'PasteText' ],
            '/',
            ['Format', 'Font', 'FontSize', '-', 'TextColor', 'BGColor', 'RemoveFormat', '-', 'Source', 'SpecialChar', 'SplitQuote', 'RemoveQuote', '-', 'Maximize']
        ]);
    }
    Core.Config.Set('RichText.PictureUploadAction', [% Data.RichTextPictureUploadAction | JSON %]);

    Core.Config.Set('RichText.EnterMode', '[% Config("Frontend::RichText::EnterMode") %]');

    Core.UI.RichTextEditor.InitAll();
//]]></script>
[% END %]
